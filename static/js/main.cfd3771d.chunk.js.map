{"version":3,"sources":["img/sandwich.png","img/coffe.png","img/cheese.png","img/hamburger.png","img/water.png","serviceWorker.js","components/Navigation/navigation.js","constants/routes.js","components/Login/login.js","components/KitchenInterf/kitchenInterf.js","components/ClientInfo/clientInfo.js","components/Client/client.js","components/WaitersInterf/waitersInterf.js","App.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Navigation","react_default","a","createElement","type","className","react_router_dom","to","Login","navigation","KitchenInterf","ClientInfo","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","client","Component","Client","_this","updateName","event","setState","clientName","target","value","showClient","renderClientInfo","state","name","onChange","onClick","clientInfo","waitersInterf","id","href","role","data-toggle","aria-controls","aria-selected","aria-labelledby","src","require","alt","App","react_router","exact","path","component","WaitersInterf","FirebaseContext","React","createContext","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_ID","Firebase","app","initializeApp","ReactDOM","render","context","Provider","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cfd3771d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sandwich.f912e98b.png\";","module.exports = __webpack_public_path__ + \"static/media/coffe.4720520b.png\";","module.exports = __webpack_public_path__ + \"static/media/cheese.2a0c6441.png\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.c52923bc.png\";","module.exports = __webpack_public_path__ + \"static/media/water.7f0ea18e.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport '../../index.css';\n\nconst Navigation = () => (\n    <nav>\n        <ul> \n            <button type=\"button\" className=\"btn btn-primary btn-lg\">\n                <Link to={ROUTES.WAITERS}>Meseros</Link>\n            </button> \n            <button type=\"button\" className=\"btn btn-primary btn-lg\">\n                <Link to={ROUTES.KITCHEN}>Cocina</Link>\n            </button>\n            {/*<button type=\"button\" className=\"btn btn-primary btn-lg\"> \n                <Link to={ROUTES.LOGIN}>Login</Link>\n            </button>*/}\n        </ul>\n        \n    </nav>\n);\n\nexport default Navigation;","export const LOGIN = '/';\nexport const WAITERS = '/waiters';\nexport const KITCHEN = '/kitchen';","import React from 'react';\nimport Navigation from '../Navigation/navigation';\n\nconst Login = () => (\n    <section className=\"bgLogin\">\n        <h2>¿En qué área laboras?</h2>\n        <Navigation/>\n        {/*<div>\n            <input type=\"password\"></input>\n            <button>Iniciar</button>\n        </div>*/}\n    </section>\n    \n);\n\nexport default Login;","import React from 'react';\n\nconst KitchenInterf = () => (\n    <h3>Cocina</h3>\n);\n\nexport default KitchenInterf;","import React, {Component} from 'react';\r\n\r\n\r\nclass ClientInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    };\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <h3>{this.props.client}</h3>\r\n        );\r\n    };\r\n};\r\n\r\nexport default ClientInfo;","import React, {Component} from 'react';\r\nimport ClientInfo from '../ClientInfo/clientInfo.js'\r\n\r\n\r\nclass Client extends Component {\r\n    constructor () {\r\n        super();\r\n\r\n        this.state = {\r\n            clientName: '',\r\n            showClient: false,\r\n        };      \r\n    };\r\n\r\n    updateName = (event) => {\r\n        this.setState({clientName:event.target.value})\r\n        this.setState({showClient: false}) \r\n    };\r\n\r\n    renderClientInfo = ()=> {\r\n       this.setState({showClient: true}) \r\n    }\r\n\r\n    render () {\r\n       return (\r\n        <section>\r\n            <h3>Cliente</h3>\r\n            <input type=\"text\" name=\"Nombre del cliente\" className=\"clientNam\" onChange={this.updateName}></input>\r\n            <button onClick={this.renderClientInfo}>Guardar</button>\r\n            {this.state.showClient ? <ClientInfo client={this.state.clientName}/> : null}\r\n        </section>\r\n       );\r\n    };\r\n};\r\n\r\nexport default Client;","import React from 'react';\nimport Client from '../Client/client.js';\n\nconst waitersInterf = () => (\n  <section>\n    <section className=\"waitersNav\">\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark waitersNav\">\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#\">Usuario<span className=\"sr-only\">(current)</span></a>\n            </li>\n            <a className=\"navbar-brand\" href=\"#\">Burger Queen Minerva</a>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">VER PEDIDOS</a>\n            </li>\n          </ul>\n        </div>\n\n      </nav>\n    </section>\n\n    <Client />\n    \n    <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n      <li className=\"nav-item\">\n        <a className=\"nav-link active\" id=\"home-tab\" data-toggle=\"tab\" href=\"#home\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">DESAYUNOS</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" id=\"profile-tab\" data-toggle=\"tab\" href=\"#profile\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">COMIDAS</a>\n      </li>\n    </ul>\n    <div className=\"tab-content\" id=\"myTabContent\">\n      <div className=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\n        <h3>PLATILLOS</h3>\n        <img src= {require ('../../img/sandwich.png')} alt=\"sandwich\" className=\"menuIcons\"/>\n        <p>sándwich</p>\n        <p>$25.00</p>\n\n        <h3>BEBIDAS</h3>\n        <img src= {require ('../../img/coffe.png')} alt=\"sandwich\" className=\"menuIcons\"/>\n        <p>sándwich</p>\n        <p>$25.00</p>\n\n        <h3>INGREDIENTES EXTRAS</h3>\n        <img src= {require ('../../img/cheese.png')} alt=\"sandwich\" className=\"menuIcons\"/>\n        <p>sándwich</p>\n        <p>$25.00</p>\n      </div>\n      <div className=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">\n        <h3>PLATILLOS</h3>\n          <img src= {require ('../../img/hamburger.png')} alt=\"sandwich\" className=\"menuIcons\"/>\n          <p>sándwich</p>\n          <p>$25.00</p>\n\n          <h3>BEBIDAS</h3>\n          <img src= {require ('../../img/water.png')} alt=\"sandwich\" className=\"menuIcons\"/>\n          <p>sándwich</p>\n          <p>$25.00</p>\n      </div>\n    </div>\n\n    <aside>\n      <p>Pedidos</p>\n    </aside>\n\n  </section>\n\n);\n\nexport default waitersInterf;","import React from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport Login from './components/Login/login';\nimport KitchenInterf from './components/KitchenInterf/kitchenInterf';\nimport WaitersInterf from './components/WaitersInterf/waitersInterf';\nimport './index.css';\nimport * as ROUTES from './constants/routes';\n\n\nconst App = () => {\n  return (\n      <Router>\n        <div>\n          <Route exact path={ROUTES.LOGIN} component={Login}/>\n          <Route exact path={ROUTES.WAITERS} component={WaitersInterf}/>\n          <Route exact path={ROUTES.KITCHEN} component={KitchenInterf}/>\n        </div>\n      </Router>\n    \n  );\n};\n\nexport default App;","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;","import app from 'firebase/app'\n\n//Web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_ID\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n  }\n};\n\nexport default Firebase;","import FirebaseContext from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\nexport { FirebaseContext };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>, document.getElementById('root'),\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}